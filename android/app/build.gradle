plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    compileSdk = flutter.compileSdkVersion
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.erl_app"
        minSdkVersion 23    
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    namespace 'com.example.erl_app'


    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
    kotlinOptions {
        jvmTarget = "17"
    }
}

    tasks.whenTaskAdded { task ->
    if (task.name == "compileDebugUnitTestKotlin") {
    task.dependsOn ':app:compileDebugKotlin'
    }
    }

flutter {
    source = "../.."
}

dependencies{
    implementation 'com.google.firebase:firebase-analytics:21.0.0'
}

apply plugin: 'com.google.gms.google-services'
